from sklearn.model_selection import KFold
import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score

# Lire les données
df = pd.read_csv("data/data4.csv", sep=";")

# Séparer les caractéristiques (X) et la cible (y)
X = df.drop('JEU', axis=1)  # Utiliser toutes les colonnes sauf 'JEU' comme caractéristiques
y = df['JEU']  # Utiliser la colonne 'JEU' comme cible

# Initialiser le modèle
model = DecisionTreeClassifier(max_depth=40, min_samples_leaf=2)

# Initialiser KFold
kf = KFold(n_splits=5)
kf.get_n_splits(X)

# Boucle sur chaque pli
for i, (train_index, test_index) in enumerate(kf.split(X)):
    print(f'Fold {i}')
    
    # Séparer les données en ensembles de formation et de test pour ce pli
    X_train, X_test = X.iloc[train_index], X.iloc[test_index]
    y_train, y_test = y.iloc[train_index], y.iloc[test_index]
    
    # Entraîner le modèle
    model.fit(X_train, y_train)
    
    # Faire des prédictions
    y_pred = model.predict(X_test)
    
    # Calculer les métriques
    accuracy = accuracy_score(y_test, y_pred)
    precision = precision_score(y_test, y_pred, average="weighted")
    recall = recall_score(y_test, y_pred, average="weighted")
    f1 = f1_score(y_test, y_pred, average='weighted')
    
    # Afficher les métriques
    print("Accuracy : ", accuracy)
    print("Precision : ", precision)
    print("Recall : ", recall)
    print("F1 Score : ", f1)
